i :: fn a: int -> int
    ret a
end

add :: fn a: int, b: int -> int
    ret a + b
end

q :: fn -> A
    A { a: 1 }
end

A :: blob {
    a: int
}

start :: fn do
    3 <=> add' i(i' 1), 2
    2 <=> i' add(1, i' 1)
    2 <=> i' add' 1, i' 1
    1 <=> i' i' i' 1
    2 <=> i' 1 -> add' 1
    2 <=> add' (i' 1), 1
    1 <=> q' .a
    3 <=> add' q'.a, 2

    if 1 == i' 1 do 1 <=> i' 1 end
end
