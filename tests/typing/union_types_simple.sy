f :: fn a: bool -> int | str | void do
    if a do
        ret 1
    else do
        ret nil
    end
end

g :: fn a: bool -> int | (bool, bool) do
    if a do
        ret 1
    else do
        ret (true, true)
    end
end

h :: fn a: bool -> int | fn -> int do
    if a do
        f :: fn -> int do
            ret 1
        end
        ret f
    else do
        ret 1
    end
end

start :: fn do
    1 <=> f(true)
    nil <=> f(false)
    (true, true) <=> g(false)
    1 <=> g(true)
    f(true) <=> g(true)
    1 <=> h(false)
    q: !fn -> int : h(true)
    1 <=> q()
end

